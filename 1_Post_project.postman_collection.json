{
	"info": {
		"_postman_id": "8530ae39-00b8-400d-b670-82cdbe450e37",
		"name": "1_Post_project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27403102"
	},
	"item": [
		{
			"name": "AUTH",
			"item": [
				{
					"name": "Post signup 3000",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var username = \"john234_doe105\";\r",
									"\r",
									"// Set the environment variable named \"MY_ACCESS_TOKEN\"\r",
									"pm.environment.set(\"username\", username);\r",
									"\r",
									"// Set the environment variable named \"MY_ACCESS_TOKEN\"\r",
									"pm.environment.set(\"password\", \"2e8f22-43c6-95fa-dc938b6fdc56\");\r",
									"\r",
									"pm.environment.set(\"email\", username + \"@example.com\");\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{username}}\",\r\n    \"role\":3,\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000{{authPath}}/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000{{authPath}}",
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post signin 3000",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response body (assuming it's JSON)\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"// Set the environment variable named \"MY_ACCESS_TOKEN\"\r",
									"pm.environment.set(\"accessToken\", jsonData.accessToken);\r",
									"\r",
									"// Set the environment variable named \"MY_ACCESS_TOKEN\"\r",
									"pm.environment.set(\"refreshToken\", jsonData.refreshToken);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000{{authPath}}/signin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000{{authPath}}",
							"path": [
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "pass reset init",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/reset-password-init",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"reset-password-init"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Me",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/me",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/65ea1d7cd77d8eda680bd81c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"65ea1d7cd77d8eda680bd81c"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All users",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users?sortBy=-username",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "-username"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Post refresh token 3000",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response body (assuming it's JSON)\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"// Set the environment variable named \"MY_ACCESS_TOKEN\"\r",
									"pm.environment.set(\"accessToken\", jsonData.accessToken);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{refreshToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n      \"username\": \"{{username}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000{{authPath}}/refresh-token",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000{{authPath}}",
							"path": [
								"refresh-token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Posts",
			"item": [
				{
					"name": "PUT  post by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"checknew3 put test post by id_post\",\r\n    \"body\": \"Если1 видим этот пост значит все не зря and put is the best!)))\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/posts/{{_id post}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"posts",
								"{{_id post}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All posts+filter_tags",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/posts?tags=two",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "tags",
									"value": "two"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All posts",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/posts",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All posts+filter_Categories",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/posts?category=65f98db4e0904205bd866b2e,66031a3054eec5b7848dde1c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "category",
									"value": "65f98db4e0904205bd866b2e,66031a3054eec5b7848dde1c"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All posts+filter_ownerId",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/posts?owner_id={{user_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "owner_id",
									"value": "{{user_id}}"
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All posts+sort by ...",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/posts?sort=_id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "_id"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete  post by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/posts/{{_id post}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"posts",
								"{{_id post}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH post by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"11checknew3 PATCH test post by id_post\",\r\n    \"body\": \"111Если видим этот пост значит все не зря and PATCH is the best!)))\",\r\n    \"category\": \"65f98dc8e0904205bd866b31\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/posts/{{_id post}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"posts",
								"{{_id post}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST create new post by User token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = JSON.parse(responseBody);\r",
									"\r",
									"// Set the environment variable named \"MY_ACCESS_TOKEN\"\r",
									"pm.environment.set(\"_id post\", jsonData.post._id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"12353464356r\",\r\n    \"body\": \"77771Если видим1 этот пост значит все не зря)))\",\r\n    \"tags\": [\"goose1\", \"two1\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/posts",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create post with upload img",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = JSON.parse(responseBody);\r",
									"\r",
									"// Set the environment variable named \"MY_ACCESS_TOKEN\"\r",
									"pm.environment.set(\"_id post\", jsonData.post._id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"type": "file",
									"src": "postman-cloud:///1eeeace7-47a2-4ab0-a291-2908330b0ce3"
								},
								{
									"key": "tittle",
									"value": "1test upload11223344",
									"type": "text"
								},
								{
									"key": "body",
									"value": "test anyu upload with post1122331",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/posts",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Uploadt",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"type": "text",
								"disabled": true
							},
							{
								"key": "enctype",
								"value": "multipart/form-data",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "imageId",
									"value": "{{_id post}}",
									"type": "text"
								},
								{
									"key": "image",
									"type": "file",
									"src": "postman-cloud:///1eeeace7-47a2-4ab0-a291-2908330b0ce3"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/upload",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get POST by id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/posts/{{_id post}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"posts",
								"{{_id post}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Category",
			"item": [
				{
					"name": "POST create newCategoty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = JSON.parse(responseBody);\r",
									"\r",
									"// Set the environment variable named \"MY_ACCESS_TOKEN\"\r",
									"pm.environment.set(\"_id post\", jsonData.post._id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Test1 Cat111\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/category",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"category"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Categories sort",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/category?sortBy=-name",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"category"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "-name"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Categories Filter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/category?name=category1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"category"
							],
							"query": [
								{
									"key": "name",
									"value": "category1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT  category by id Copy",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Category 3.2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/category/65f98de0e0904205bd866b34",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"category",
								"65f98de0e0904205bd866b34"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "PATCH create newComment to  post by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Response is an object with status and error properties\", function () {",
									"    pm.expect(pm.response.json()).to.be.an('object').that.has.all.keys('status', 'error');",
									"});",
									"var template = `",
									"<p>Status: 404</p>",
									"<p>Error: </p>",
									"`;",
									"",
									"function constructVisualizerPayload() {",
									"    return {response: pm.response.json()};",
									"}",
									"",
									"pm.visualizer.set(template, constructVisualizerPayload());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"title\": \"555332211checknew3 PATCH test post by id_post\",\r\n        \"body\": \"3322111Если видим этот пост значит все не зря and PATCH is the best!)))\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/comment/{{_id comment}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"comment",
								"{{_id comment}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "create newComment to  post by id Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = JSON.parse(responseBody);",
									"// Set the environment variable named \"MY_ACCESS_TOKEN\"",
									"pm.environment.set(\"_id comment\", jsonData.comment._id);",
									"",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Response is an object with status and error properties\", function () {",
									"    pm.expect(pm.response.json()).to.be.an('object').that.has.all.keys('status', 'error');",
									"});",
									"var template = `",
									"<p>Status: 404</p>",
									"<p>Error: </p>",
									"`;",
									"",
									"function constructVisualizerPayload() {",
									"    return {response: pm.response.json()};",
									"}",
									"",
									"pm.visualizer.set(template, constructVisualizerPayload());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"title\": \"332211checknew3 PATCH test post by id_post\",\r\n        \"body\": \"3322111Если видим этот пост значит все не зря and PATCH is the best!)))\",\r\n        \"post\": \"{{_id post}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/comment",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"comment"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}